# Generated by Django 3.2.18 on 2023-11-04 12:00

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('official_name', models.CharField(max_length=255, null=True)),
                ('iso2', models.CharField(max_length=2, null=True)),
                ('iso3', models.CharField(max_length=3)),
                ('gec', models.CharField(max_length=2, null=True)),
                ('flag', models.URLField(null=True)),
                ('capital', models.JSONField(null=True)),
                ('translations', models.JSONField(null=True)),
                ('currencies', models.JSONField(null=True)),
                ('income_level', models.CharField(max_length=4, null=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='CountryBorder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country1', models.CharField(max_length=255, null=True)),
                ('country2', models.CharField(max_length=255, null=True)),
                ('length_km', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'country_border',
            },
        ),
        migrations.CreateModel(
            name='CountryEconomy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso3', models.CharField(max_length=3)),
                ('gdp_real', models.BigIntegerField(help_text='purchasing power parity in billion dollars', null=True)),
                ('gdp_gross', models.BigIntegerField(help_text='in billion dollars', null=True)),
                ('gdp_agriculture', models.DecimalField(decimal_places=2, help_text='percentage of total GDP', max_digits=10, null=True)),
                ('gdp_industry', models.DecimalField(decimal_places=2, help_text='percentage of total GDP', max_digits=10, null=True)),
                ('gdp_services', models.DecimalField(decimal_places=2, help_text='percentage of total GDP', max_digits=10, null=True)),
                ('real_gdp_growth_rate', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('real_gdp_per_capita', models.BigIntegerField(help_text='in dollars', null=True)),
                ('inflation_rate', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('industrial_production_growth_rate', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('labor_force', models.BigIntegerField(null=True)),
                ('labor_force_agriculture', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('labor_force_industry', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('labor_force_services', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('unemployment_rate', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('unemployment_rate_youth', models.DecimalField(decimal_places=2, help_text='percentage of unemployment 15-24', max_digits=10, null=True)),
                ('population_below_poverty_line', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('public_debt', models.DecimalField(decimal_places=2, help_text='percentage of GDP', max_digits=10, null=True)),
                ('taxes', models.DecimalField(decimal_places=2, help_text='percentage of GDP', max_digits=10, null=True)),
                ('exports', models.BigIntegerField(help_text='in billion dollars', null=True)),
                ('imports', models.BigIntegerField(help_text='in billion dollars', null=True)),
            ],
            options={
                'db_table': 'country_economy',
            },
        ),
        migrations.CreateModel(
            name='CountryGeography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso3', models.CharField(max_length=3)),
                ('maps', models.URLField(null=True)),
                ('lat_lng', models.JSONField(null=True)),
                ('total_area_sq_km', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('land_area_sq_km', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('water_area_sq_km', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('border_length_km', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('coastline_length_km', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('highest_point', models.JSONField(null=True)),
            ],
            options={
                'db_table': 'country_geography',
            },
        ),
        migrations.CreateModel(
            name='CountrySociety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso3', models.CharField(max_length=3)),
                ('languages', models.JSONField(null=True)),
                ('population', models.BigIntegerField(null=True)),
                ('population_growth_rate', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('population_0_14_percentage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('population_15_64_percentage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('population_65_more_percentage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('population_males_0_14', models.BigIntegerField(null=True)),
                ('population_females_0_14', models.BigIntegerField(null=True)),
                ('population_males_15_64', models.BigIntegerField(null=True)),
                ('population_females_15_64', models.BigIntegerField(null=True)),
                ('population_males_65_more', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('population_females_65_more', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('median_age', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('median_age_male', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('median_age_female', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('births_every_1000', models.DecimalField(decimal_places=2, help_text='births every 1000 population', max_digits=10, null=True)),
                ('deaths_every_1000', models.DecimalField(decimal_places=2, help_text='deaths every 1000 population', max_digits=10, null=True)),
                ('migrants_every_1000', models.DecimalField(decimal_places=2, help_text='migrants every 1000 population', max_digits=10, null=True)),
                ('urban_population_percentage', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('life_expectancy_at_birth', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('life_expectancy_at_birth_male', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('life_expectancy_at_birth_female', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('births_per_woman', models.DecimalField(decimal_places=2, help_text='children born/woman', max_digits=10, null=True)),
                ('health_expenditure', models.DecimalField(decimal_places=2, help_text='as a percentage of GDP', max_digits=10, null=True)),
                ('physicians_density', models.DecimalField(decimal_places=2, help_text='physicians every 1000 population', max_digits=10, null=True)),
                ('hospital_bed_density', models.DecimalField(decimal_places=2, help_text='beds every 1000 population', max_digits=10, null=True)),
                ('obesity_rate', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('alcohol_consumption_per_capita', models.DecimalField(decimal_places=2, help_text='liters', max_digits=10, null=True)),
                ('beer_consumption_per_capita', models.DecimalField(decimal_places=2, help_text='liters', max_digits=10, null=True)),
                ('wine_consumption_per_capita', models.DecimalField(decimal_places=2, help_text='liters', max_digits=10, null=True)),
                ('spirits_consumption_per_capita', models.DecimalField(decimal_places=2, help_text='liters', max_digits=10, null=True)),
                ('tobacco_use', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('tobacco_use_male', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('tobacco_use_female', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('married_women_rate', models.DecimalField(decimal_places=2, help_text='ages 15-49', max_digits=10, null=True)),
                ('literacy_rate', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('literacy_rate_male', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
                ('literacy_rate_female', models.DecimalField(decimal_places=2, help_text='percentage', max_digits=10, null=True)),
            ],
            options={
                'db_table': 'country_society',
            },
        ),
    ]
